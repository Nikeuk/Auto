перем ВыбранноеПомещение;
перем хНачало;
перем уНачало;
перем КоординатыИпомещения;
перем планБТИ;
перем неразмеченныеПомещения;


// интерактив
Процедура ПолеHTMLДокумента1onclick(Элемент, pEvtObj)
                Попытка
                               ИД = pEvtObj.srcElement.id;
                               ВыбранноеПомещение = Справочники.бит_Помещения.ПолучитьСсылку(Новый УникальныйИдентификатор(ИД));
                               //сообщить(ВыбранноеПомещение.Наименование);
                               место = ВыбранноеПомещение;
                Исключение
                               возврат;
                КонецПопытки;
КонецПроцедуры

Процедура КартаЭтажаonmousedown(Элемент, pEvtObj)
                Попытка
                               ИД = pEvtObj.srcElement.id;
                               ВыбранноеПомещение = Справочники.бит_Помещения.ПолучитьСсылку(Новый УникальныйИдентификатор(ИД));
                Исключение
                               возврат;
                КонецПопытки;
                //сообщить(ВыбранноеПомещение.Наименование);
                //нажали кнопку мышки
                //сообщить("Нажали");
                хНачало = pEvtObj.clientX;
                уНачало = pEvtObj.clientY;
                //если ВыбранноеПомещение = Неопределено тогда
                //            возврат;
                //КонецЕсли;
                Место = ВыбранноеПомещение;
КонецПроцедуры

Процедура КартаЭтажаonmouseup(Элемент, pEvtObj)
                если ВыбранноеПомещение = Неопределено тогда
                               возврат;
                КонецЕсли;
                
                //отпустили кнопочку
                хКонец = pEvtObj.clientX;
                уКонец = pEvtObj.clientY;

                //сообщить("Отпустили");
                если хНачало = хКонец и уНачало = уКонец тогда
                               //Сообщить("ничего никуда не перетащили");
                               возврат;
                иначе
                               офсетХ = хКонец - хНачало;
                               офсетУ = уКонец - уНачало;
                               сдвинутьОбъект(офсетХ,офсетУ);
                КонецЕсли;
                


КонецПроцедуры

Процедура КартаЭтажаonkeypress(Элемент, pEvtObj)
                //сообщить(pEvtObj.keyCode);
                если ВыбранноеПомещение = Неопределено тогда
                               возврат;
                КонецЕсли;
                если pEvtObj.keyCode = 1074 тогда
                               сдвинутьОбъект(1,0);
                ИначеЕсли pEvtObj.keyCode = 1092 тогда 
                               сдвинутьОбъект(-1,0);
                ИначеЕсли pEvtObj.keyCode = 1094 тогда 
                               сдвинутьОбъект(0,-1);
                ИначеЕсли pEvtObj.keyCode = 1099 тогда 
                               сдвинутьОбъект(0,1);
                КонецЕсли;
                
КонецПроцедуры

процедура сдвинутьОбъект(х,у)
                               офсетХ = х;
                               офсетУ = у;
                               если ВыбранноеПомещение = Неопределено тогда
                                               возврат;
                               КонецЕсли;
                               
                               если КоординатыИпомещения = Неопределено или КоординатыИпомещения.количество() = 0 тогда
                                               запрос = новый запрос("ВЫБРАТЬ
                                                                     |       бит_КординатыПомещенийСрезПоследних.Период,
                                                                     |       бит_КординатыПомещенийСрезПоследних.ЕдиницаОбъектаАренды,
                                                                     |       бит_КординатыПомещенийСрезПоследних.КоординатыПомещения
                                                                     |ИЗ
                                                                     |       РегистрСведений.бит_КординатыПомещений.СрезПоследних(&Дата, ЕдиницаОбъектаАренды = &Помещение) КАК бит_КординатыПомещенийСрезПоследних");
                                               запрос.УстановитьПараметр("Дата",ДатаСведений);
                                               запрос.УстановитьПараметр("Помещение",ВыбранноеПомещение);
                                               табКоординаты = запрос.Выполнить().Выгрузить();
                                               если табКоординаты.Количество() = 0 тогда
                                                               возврат;
                                               КонецЕсли;

                                               координаты = табКоординаты[0].КоординатыПомещения;
                                               числоТочек = СтрЧислоСтрок(координаты);
                               иначе
                                               отбор = новый Структура("ЕдиницаОбъектаАренды",ВыбранноеПомещение);
                                               массивСтрок = КоординатыИпомещения.найтиСтроки(отбор);
                                               если массивСтрок.количество() = 1 тогда
                                                               координаты = массивСтрок[0].КоординатыПомещения;
                                                               числоТочек = СтрЧислоСтрок(координаты);
                                               иначе
                                                               Возврат;
                                               КонецЕсли;
                               КонецЕсли;
                               
                               //координаты = табКоординаты[0].КоординатыПомещения;
                               //числоТочек = СтрЧислоСтрок(координаты);
                               новСтрокаКоординат = "";
                               
                    для х=1 по числоТочек цикл
                                               текТочка = СтрПолучитьСтроку(координаты,х);
                                               КоординатаХ = число(сред(текТочка,1,(Найти(текТочка,"|")-1))) + офсетХ;
                                               КоординатаУ = число(Прав(текТочка,(СтрДлина(текТочка) - Найти(текТочка,"|")))) + офсетУ;
                                               новСтрокаКоординат = новСтрокаКоординат + СтрЗаменить(строка(КоординатаХ),Символы.НПП,"") + "|" + СтрЗаменить(строка(КоординатаУ),Символы.НПП,"") + Символы.ПС;
                               КонецЦикла;
                               отбор = новый Структура("ЕдиницаОбъектаАренды",ВыбранноеПомещение);
                               массивСтрок = КоординатыИпомещения.найтиСтроки(отбор);
                               если массивСтрок.количество() = 1 тогда
                                               массивСтрок[0].КоординатыПомещения = новСтрокаКоординат;
                               КонецЕсли;
                               ОтрисоватьСхемуОбъекта(ОбъектАренды);

КонецПроцедуры

Процедура ОтрисоватьСхемуОбъекта(Объект)          
                Если ТипЗнч(Объект) = Тип("СправочникСсылка.бит_Помещения") тогда
                Иначе
                               //Если ПолучитьДанныеРегистраСхемыОбъектов() тогда
                               Если Истина тогда
                                               
                                               РезЗапроса = ПолучитьКоординаты();
                                               если РезЗапроса = Неопределено тогда
                                                               Возврат;
                                               КонецЕсли;
                                               
                                               //*****************************************************
                                               //СсылкаНаЗаписьРегистра = ПолучитьДанныеРегистраСхемыОбъектов(Истина);
                                               Если планБТИ=Неопределено Тогда 
                                                               СхемаОбъекта = "<HTML></HTML>";                                                                
                                               Иначе                                  
                                                               СхемаОбъекта = "<HTML xmlns:v = ""urn:schemas-microsoft-com:vml"" xmlns:t = ""urn:schemas-microsoft-com:time""><HEAD>
                                                                                                              |<META content=""text/html; charset=utf-8"" http-equiv=Content-Type></META>
                                                                                                              |<STYLE>
                                                                                                              |v\:* {
                                                                                                              |             BEHAVIOR: url(#default#VML)
                                                                                                              |}
                                                                                                              |</STYLE>
                                                                                                              |
                                                                                                              |<META name=GENERATOR content=""MSHTML 8.00.6001.18702""></META></BASE></HEAD>
                                                                                                              |<BODY>
                                                                                                              |<P>";
                                                                                                              
                                                               //КартинкаСхемаОбъекта = СсылкаНаЗаписьРегистра.СхемаОбъекта.Получить();
                                                               //ФорматСхемы = КартинкаСхемаОбъекта.Формат();
                                                               //Если ФорматСхемы = ФорматКартинки.EMF
                                                               //            ИЛИ ФорматСхемы = ФорматКартинки.Icon
                                                               //            ИЛИ ФорматСхемы = ФорматКартинки.TIFF
                                                               //            ИЛИ ФорматСхемы = ФорматКартинки.WMF
                                                               //            ИЛИ ФорматСхемы = ФорматКартинки.НеизвестныйФормат Тогда
                                                               //            КартинкаСхемаОбъекта = КартинкаСхемаОбъекта.Преобразовать(ФорматКартинки.PNG);
                                                               //КонецЕсли;   
                                                               //ВремФайл = ПолучитьИмяВременногоФайла(Строка(КартинкаСхемаОбъекта.Формат()));
                                                               //КартинкаСхемаОбъекта.Записать(ВремФайл);
                                                               
                                                               //******************************************************
                                                               //СхемаОбъекта = СхемаОбъекта + "<img src=""file://"+ВремФайл+""" style='position:absolute; left:10; top:10' /> ";
                                                               СхемаОбъекта = СхемаОбъекта + "<img src=""file://"+планБТИ+""" style='position:absolute; left:10; top:10' /> ";
                                                               Если  РезЗапроса.Количество() > 0 Тогда
                                                                              // 1CBiT_ABoltovich 08.06.2011 Начало{                                             
                                                                              КартинкаШтрихЗеленый          = БиблиотекаКартинок.бит_штр_Зеленый;
                                                                              ВремФайлШтрихЗеленый       = ПолучитьИмяВременногоФайла(Строка(КартинкаШтрихЗеленый.Формат()));
                                                                              КартинкаШтрихЗеленый.Записать(ВремФайлШтрихЗеленый);
                                                                              
                                                                              КартинкаШтрихСиний                               = БиблиотекаКартинок.бит_штр_Синий;
                                                                              ВремФайлШтрихСиний                             = ПолучитьИмяВременногоФайла(Строка(КартинкаШтрихСиний.Формат()));
                                                                              КартинкаШтрихСиний.Записать(ВремФайлШтрихСиний);                                                   
                                                                              // 1CBiT_ABoltovich 08.06.2011 }Конец                                               
                                                                              Для Каждого Стр из РезЗапроса цикл
                                                                                              Коорд = СтрЗаменить(Стр.КоординатыПомещения, "|", " ");
                                                                                              // 1CBiT_ABoltovich 08.06.2011 Начало{                                             
                                                                                              //СхемаОбъекта = СхемаОбъекта + "<v:polyline id="+стр.ЕдиницаОбъектаАренды.УникальныйИдентификатор()+" style='position:absolute; left:10; top:10' fillcolor=""blue"" strokecolor=""black"" strokeweight=""1px"" points="""+Коорд+" "" /> ";
                                                                                              //НайденнаяСтрока     = ИнформацияПоДоговорам.Найти(стр.ЕдиницаОбъектаАренды, "Помещение");                                                  
                                                                                              НайденнаяСтрока         = Неопределено;                                                         
                                                                                              //ВремФайлШтрих = ?(НайденнаяСтрока = Неопределено, ВремФайлШтрихСиний, ВремФайлШтрихЗеленый);
                                                                                              ВремФайлШтрих = ВремФайлШтрихСиний;
                                                                                              СхемаОбъекта = СхемаОбъекта + "<v:polyline id="+стр.ЕдиницаОбъектаАренды.УникальныйИдентификатор()+" style='position:absolute; left:10; top:10' strokecolor=""black"" strokeweight=""1px"" points="""+Коорд+" ""><v:fill src=""file://" + ВремФайлШтрих + """ type=""tile""/></v:polyline>";                                                                
                                                                                              // 1CBiT_ABoltovich 08.06.2011 }Конец                                               
                                                                              конецЦикла;                                   
                                                               КонецЕсли;
                                                               СхемаОбъекта = СхемаОбъекта + "</P></BODY></HTML>";
                                               КонецЕсли;                                      
                               Иначе
                                               СхемаОбъекта = "<HTML></HTML>";
                               КонецЕсли;
//                           сообщить(СхемаОбъекта);
                               ЭлементыФормы.КартаЭтажа.УстановитьТекст(СхемаОбъекта);
                конецЕсли;       
КонецПроцедуры

Процедура ОбъектАрендыПриИзменении(Элемент)
                КоординатыИпомещения = новый ТаблицаЗначений;
                КоординатыИпомещения.Колонки.Добавить("ЕдиницаОбъектаАренды");
                КоординатыИпомещения.Колонки.Добавить("КоординатыПомещения");
                
                СсылкаНаЗаписьРегистра = ПолучитьДанныеРегистраСхемыОбъектов(Истина);
                Если СсылкаНаЗаписьРегистра=Неопределено Тогда 
                               СхемаОбъекта = "<HTML></HTML>";
                               планБТИ = Неопределено;
                Иначе                                  
                               СхемаОбъекта = "<HTML xmlns:v = ""urn:schemas-microsoft-com:vml"" xmlns:t = ""urn:schemas-microsoft-com:time""><HEAD>
                                                                              |<META content=""text/html; charset=utf-8"" http-equiv=Content-Type></META>
                                                                              |<STYLE>
                                                                              |v\:* {
                                                                              |             BEHAVIOR: url(#default#VML)
                                                                              |}
                                                                              |</STYLE>
                                                                              |
                                                                              |<META name=GENERATOR content=""MSHTML 8.00.6001.18702""></META></BASE></HEAD>
                                                                              |<BODY>
                                                                              |<P>";
                                                                              
                               КартинкаСхемаОбъекта = СсылкаНаЗаписьРегистра.СхемаОбъекта.Получить();
                               ФорматСхемы = КартинкаСхемаОбъекта.Формат();
                               Если ФорматСхемы = ФорматКартинки.EMF
                                               ИЛИ ФорматСхемы = ФорматКартинки.Icon
                                               ИЛИ ФорматСхемы = ФорматКартинки.TIFF
                                               ИЛИ ФорматСхемы = ФорматКартинки.WMF
                                               ИЛИ ФорматСхемы = ФорматКартинки.НеизвестныйФормат Тогда
                                               КартинкаСхемаОбъекта = КартинкаСхемаОбъекта.Преобразовать(ФорматКартинки.PNG);
                               КонецЕсли;       
                                               ВремФайл = ПолучитьИмяВременногоФайла(Строка(КартинкаСхемаОбъекта.Формат()));
                                               КартинкаСхемаОбъекта.Записать(ВремФайл);
                                               ПланБТИ = ВремФайл;

                               КонецЕсли;
                               запрос = новый запрос("ВЫБРАТЬ
                                                                                                              |             бит_Помещения.Ссылка как ЕдиницаОбъектаАренды,
                                                                                                              |                бит_КординатыПомещенийСрезПоследних.ЕдиницаОбъектаАренды как ссылка,
                                                                                                              |                бит_КординатыПомещенийСрезПоследних.КоординатыПомещения
                                                                                                              |ИЗ
                                                                                                              |             Справочник.бит_Помещения КАК бит_Помещения
                                                                                                              |                             ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_КординатыПомещений.СрезПоследних(&Дата, ЕдиницаОбъектаАренды.Владелец = &объектАренды) КАК бит_КординатыПомещенийСрезПоследних
                                                                                                              |                             ПО (бит_КординатыПомещенийСрезПоследних.ЕдиницаОбъектаАренды = бит_Помещения.Ссылка)
                                                                                                              |ГДЕ
                                                                                                              |             бит_Помещения.Владелец = &объектАренды
                                                                                                              |             И бит_КординатыПомещенийСрезПоследних.ЕдиницаОбъектаАренды ЕСТЬ NULL ");
                               запрос.УстановитьПараметр("объектАренды",ОбъектАренды);
                               запрос.УстановитьПараметр("Дата",ДатаСведений);
                               резЗапроса = запрос.Выполнить().Выгрузить();
                               неразмеченныеПомещения = новый ТаблицаЗначений;
                               неразмеченныеПомещения.Колонки.Добавить("ЕдиницаОбъектаАренды");
                               неразмеченныеПомещения.Колонки.Добавить("КоординатыПомещения");
                               для Каждого текСтрока из резЗапроса цикл
                                               стр = неразмеченныеПомещения.Добавить();
                                               ЗаполнитьЗначенияСвойств(стр,текСтрока);
                               КонецЦикла;
                               ОтрисоватьСхемуОбъекта(элемент.значение);
КонецПроцедуры

Процедура ЗаполнитьНажатие(Элемент)
                КнопкаВыполнитьНажатие(Неопределено);
                если ШиринаМеста = 0 или высотаМеста = 0 тогда
                               сообщить("Укажите размер рабочего места!");
                               возврат;
                КонецЕсли;
                запрос = новый запрос("ВЫБРАТЬ ПЕРВЫЕ 10
                                      |       бит_Помещения.Ссылка КАК ЕдиницаОбъектаАренды,
                                      |       бит_КординатыПомещенийСрезПоследних.ЕдиницаОбъектаАренды КАК ссылка,
                                      |       бит_КординатыПомещенийСрезПоследних.КоординатыПомещения
                                      |ИЗ
                                      |       Справочник.бит_Помещения КАК бит_Помещения
                                      |                       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_КординатыПомещений.СрезПоследних(&Дата, ЕдиницаОбъектаАренды.Владелец = &объектАренды) КАК бит_КординатыПомещенийСрезПоследних
                                      |                       ПО (бит_КординатыПомещенийСрезПоследних.ЕдиницаОбъектаАренды = бит_Помещения.Ссылка)
                                      |ГДЕ
                                      |       бит_Помещения.Владелец = &объектАренды
                                      |       И бит_КординатыПомещенийСрезПоследних.ЕдиницаОбъектаАренды ЕСТЬ NULL ");
                запрос.УстановитьПараметр("объектАренды",ОбъектАренды);
                запрос.УстановитьПараметр("Дата",ДатаСведений);
                резЗапроса = запрос.Выполнить().Выгрузить();
                неразмеченныеПомещения = новый ТаблицаЗначений;
                неразмеченныеПомещения.Колонки.Добавить("ЕдиницаОбъектаАренды");
                неразмеченныеПомещения.Колонки.Добавить("КоординатыПомещения");
                для Каждого текСтрока из резЗапроса цикл
                               стр = неразмеченныеПомещения.Добавить();
                               ЗаполнитьЗначенияСвойств(стр,текСтрока);
                КонецЦикла;
                х = 10;
                у = 0;
                пока х < 10 + неразмеченныеПомещения.Количество()*ШиринаМеста цикл
                               координаты = строка(х) + "|10" + Символы.ПС 
                                                               + СтрЗаменить(строка(х +ШиринаМеста),Символы.НПП,"") + "|10" + Символы.ПС
                                                               + СтрЗаменить(строка(х +ШиринаМеста),Символы.НПП,"") + "|" + СтрЗаменить(строка(10 +высотаМеста),Символы.НПП,"") + Символы.ПС
                                                               + строка(х) + "|" + СтрЗаменить(строка(10 +высотаМеста),Символы.НПП,"") + Символы.ПС
                                                               + строка(х) + "|10" + Символы.ПС; 
                               текМесто = неразмеченныеПомещения[у].ЕдиницаОбъектаАренды;
                               отбор = новый Структура("ЕдиницаОбъектаАренды",текМесто);
                               массивСтрок = КоординатыИпомещения.найтиСтроки(отбор);
                               если массивСтрок.количество() = 0 тогда
                                               стр = КоординатыИпомещения.добавить();
                                               стр.ЕдиницаОбъектаАренды = текМесто;
                                               стр.КоординатыПомещения  = координаты;
                               иначе
                                               массивСтрок[0].ЕдиницаОбъектаАренды = текМесто;
                                               массивСтрок[0].КоординатыПомещения = координаты;
                               КонецЕсли;
                               х=х+ШиринаМеста;
                               у=у+1;
                КонецЦикла;
                ОтрисоватьСхемуОбъекта(ОбъектАренды); 
КонецПроцедуры

Процедура ОбнаружитьНажатие(Элемент)
                //КнопкаВыполнитьНажатие(Неопределено);
                если ШиринаМеста = 0 или высотаМеста = 0 тогда
                               сообщить("Укажите размер рабочего места!");
                               возврат;
                КонецЕсли;
                запрос = новый запрос("ВЫБРАТЬ
                                      |       бит_Помещения.Ссылка КАК ЕдиницаОбъектаАренды,
                                      |       бит_КординатыПомещенийСрезПоследних.ЕдиницаОбъектаАренды КАК ссылка,
                                      |       бит_КординатыПомещенийСрезПоследних.КоординатыПомещения
                                      |ИЗ
                                      |       Справочник.бит_Помещения КАК бит_Помещения
                                      |                       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_КординатыПомещений.СрезПоследних(&Дата, ЕдиницаОбъектаАренды.Владелец = &объектАренды) КАК бит_КординатыПомещенийСрезПоследних
                                      |                       ПО (бит_КординатыПомещенийСрезПоследних.ЕдиницаОбъектаАренды = бит_Помещения.Ссылка)
                                      |ГДЕ
                                                                                                |           бит_Помещения.Владелец = &объектАренды
                                      |       И бит_Помещения.ссылка = &текместо
                                      |       И НЕ бит_КординатыПомещенийСрезПоследних.ЕдиницаОбъектаАренды ЕСТЬ NULL ");
                запрос.УстановитьПараметр("объектАренды",ОбъектАренды);
                запрос.УстановитьПараметр("текместо",место);
                запрос.УстановитьПараметр("Дата",ДатаСведений);
                
                резЗапроса = запрос.Выполнить().Выгрузить();
                
                неразмеченныеПомещения = новый ТаблицаЗначений;
                неразмеченныеПомещения.Колонки.Добавить("ЕдиницаОбъектаАренды");
                неразмеченныеПомещения.Колонки.Добавить("КоординатыПомещения");
                
                для Каждого текСтрока из резЗапроса цикл
                               стр = неразмеченныеПомещения.Добавить();
                               
                               ЗаполнитьЗначенияСвойств(стр,текСтрока);
                КонецЦикла;
                
                х = 10;
                у = 0;
                
                //пока х < 10 + неразмеченныеПомещения.Количество()*ШиринаМеста цикл
                               координаты = строка(х) + "|10" + Символы.ПС 
                                                               + СтрЗаменить(строка(х +ШиринаМеста),Символы.НПП,"") + "|10" + Символы.ПС
                                                               + СтрЗаменить(строка(х +ШиринаМеста),Символы.НПП,"") + "|" + СтрЗаменить(строка(10 +высотаМеста),Символы.НПП,"") + Символы.ПС
                                                               + строка(х) + "|" + СтрЗаменить(строка(10 +высотаМеста),Символы.НПП,"") + Символы.ПС
                                                               + строка(х) + "|10" + Символы.ПС; 
                                                               
                               текМесто = неразмеченныеПомещения[у].ЕдиницаОбъектаАренды;
                               
                               отбор = новый Структура("ЕдиницаОбъектаАренды",текМесто);
                               массивСтрок = КоординатыИпомещения.найтиСтроки(отбор);
                               
                               если массивСтрок.количество() = 0 тогда
                                               стр = КоординатыИпомещения.добавить();
                                               стр.ЕдиницаОбъектаАренды = текМесто;
                                               стр.КоординатыПомещения  = координаты;
                               иначе
                                               массивСтрок[0].ЕдиницаОбъектаАренды = текМесто;
                                               массивСтрок[0].КоординатыПомещения = координаты;
                               КонецЕсли;
//                           х=х+ШиринаМеста;
//                           у=у+1;
                //КонецЦикла;
                
                ОтрисоватьСхемуОбъекта(ОбъектАренды);
                
КонецПроцедуры



// отключение типового функционала поля HTML документа
Процедура КартаЭтажаondragstart(Элемент, pEvtObj)
                pEvtObj.returnValue =ложь;//стандартнаяОбработка = ложь
КонецПроцедуры

Процедура КартаЭтажаonselectstart(Элемент, pEvtObj)
                pEvtObj.returnValue =ложь; //стандартнаяОбработка = ложь
КонецПроцедуры


// данные 

Функция ПолучитьКоординаты()
                если КоординатыИпомещения = Неопределено тогда
                               Возврат Неопределено;
                КонецЕсли;
                
                если КоординатыИпомещения.количество() = 0 тогда
                               ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
                                          |  бит_КординатыПомещенийСрезПоследних.ЕдиницаОбъектаАренды,
                                          |  бит_КординатыПомещенийСрезПоследних.КоординатыПомещения
                                          |ИЗ
                                          |  РегистрСведений.бит_КординатыПомещений.СрезПоследних(&Период, ЕдиницаОбъектаАренды.Владелец = &Помещение) КАК бит_КординатыПомещенийСрезПоследних";
                               Запрос = Новый Запрос;
                               Запрос.Текст = ТекстЗапроса;
                               Запрос.УстановитьПараметр("Период", ДатаСведений);
                               //Запрос.УстановитьПараметр("Период", ТекущаяДата());
                               Запрос.УстановитьПараметр("Помещение", ОбъектАренды);
                               РезЗапроса = Запрос.Выполнить().Выгрузить();
                               для Каждого текСтрока из РезЗапроса цикл
                                               стр = КоординатыИпомещения.добавить();
                                               ЗаполнитьЗначенияСвойств(стр,текСтрока);
                               КонецЦикла;
                               
                КонецЕсли;       
                Возврат КоординатыИпомещения;
КонецФункции

Функция ПолучитьДанныеРегистраСхемыОбъектов(ВернутьСсылку = Ложь)
                
                Если ВернутьСсылку Тогда
                               ВозвратЗначение = Неопределено;
                Иначе
                               ВозвратЗначение = Ложь;                        
                КонецЕсли;
                
                //ВыбраннаяСтрока = ЭлементыФормы.СправочникДерево.ТекущаяСтрока;
                
                Запрос = Новый Запрос;
                Запрос.Текст =
                "ВЫБРАТЬ
                |             бит_СхемыОбъектовСрезПоследних.Период,
                |             бит_СхемыОбъектовСрезПоследних.ОбъектАренды
                |ИЗ
                |             РегистрСведений.бит_СхемыОбъектов.СрезПоследних(&Период, ОбъектАренды = &ОбъектАренды) КАК бит_СхемыОбъектовСрезПоследних";
                
                Запрос.УстановитьПараметр("Период", ДатаСведений);
                //Запрос.УстановитьПараметр("Период", ТекущаяДата());
                //Запрос.УстановитьПараметр("ОбъектАренды", ВыбраннаяСтрока.ОбъектОтбор);
                Запрос.УстановитьПараметр("ОбъектАренды", ОбъектАренды);
                ДанныеРегистра = Запрос.Выполнить().Выбрать();
                
                МенеджерЗаписи = РегистрыСведений.бит_СхемыОбъектов.СоздатьМенеджерЗаписи();
                МенеджерЗаписи.ОбъектАренды = ОбъектАренды;
                
                Если ДанныеРегистра.Следующий() Тогда
                               МенеджерЗаписи.Период = ДанныеРегистра.Период;
                               МенеджерЗаписи.Прочитать();
                Иначе
                               МенеджерЗаписи.Период = ДатаСведений;
                               //МенеджерЗаписи.Период = ТекущаяДата();
                КонецЕсли;       
                
                Если ВернутьСсылку Тогда
                               ВозвратЗначение = МенеджерЗаписи;
                Иначе
                               ВозвратЗначение = МенеджерЗаписи.Выбран() И ТипЗнч(МенеджерЗаписи.СхемаОбъекта.Получить()) <> ТипЗнч(Неопределено);                              
                КонецЕсли;       
                
                Возврат ВозвратЗначение;
                
КонецФункции

Процедура КнопкаВыполнитьНажатие(Кнопка)
                // Вставить содержимое обработчика.
                если КоординатыИпомещения = Неопределено тогда
                               Возврат;
                КонецЕсли;
                если КоординатыИпомещения.количество() = 0 тогда
                               Возврат;
                КонецЕсли;
                
                для Каждого текСтрока из КоординатыИпомещения цикл
                               наборЗаписей = РегистрыСведений.бит_КординатыПомещений.СоздатьНаборЗаписей();
                               наборЗаписей.Отбор.ЕдиницаОбъектаАренды.установить(текСтрока.ЕдиницаОбъектаАренды);
                               запись = наборЗаписей.Добавить();
                               запись.Период = ДатаСведений;
                               запись.ЕдиницаОбъектаАренды = текСтрока.ЕдиницаОбъектаАренды;
                               запись.КоординатыПомещения = текСтрока.КоординатыПомещения;
                               наборЗаписей.Записать();
                КонецЦикла;
                
КонецПроцедуры

//Форма
Процедура КоманднаяПанель1Обновить(Кнопка)
                если ОбъектАренды.Пустая() тогда
                               возврат;
                КонецЕсли;
                
                ОтрисоватьСхемуОбъекта(ОбъектАренды);
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
                ДатаСведений = ТекущаяДата();
                ШиринаМеста = 30;
                ВысотаМеста = 30;
КонецПроцедуры

Процедура ШиринаПриИзменении(Элемент)
                если высотаМеста = 0 или элемент.значение = 0 тогда
                               возврат;
                КонецЕсли;
                если неразмеченныеПомещения = Неопределено тогда
                               Возврат
                КонецЕсли;
                если неразмеченныеПомещения.количество() = 0 тогда
                               возврат;
                КонецЕсли;
                координаты = "10|10" + Символы.ПС 
                                               + СтрЗаменить(строка(10 +ШиринаМеста),Символы.НПП,"") + "|10" + Символы.ПС
                                               + СтрЗаменить(строка(10 +ШиринаМеста),Символы.НПП,"") + "|" + СтрЗаменить(строка(10 +высотаМеста),Символы.НПП,"") + Символы.ПС
                                               + "10|" + СтрЗаменить(строка(10 +высотаМеста),Символы.НПП,"") + Символы.ПС
                                               + "10|10" + Символы.ПС; 
                текМесто = неразмеченныеПомещения[0].ЕдиницаОбъектаАренды;
                отбор = новый Структура("ЕдиницаОбъектаАренды",текМесто);
                массивСтрок = КоординатыИпомещения.найтиСтроки(отбор);
                если массивСтрок.количество() = 0 тогда
                               стр = КоординатыИпомещения.добавить();
                               стр.ЕдиницаОбъектаАренды = текМесто;
                               стр.КоординатыПомещения  = координаты;
                иначе
                               массивСтрок[0].ЕдиницаОбъектаАренды = текМесто;
                               массивСтрок[0].КоординатыПомещения = координаты;
                КонецЕсли;
                ВыбранноеПомещение = текМесто; 
                место = ВыбранноеПомещение;
                               
                               
                               

КонецПроцедуры

Процедура ВысотаПриИзменении(Элемент)
                если ширина = 0 или элемент.значение = 0  тогда
                               возврат;
                КонецЕсли;
                если неразмеченныеПомещения = Неопределено тогда
                               Возврат
                КонецЕсли;
                если неразмеченныеПомещения.количество() = 0 тогда
                               возврат;
                КонецЕсли;
                координаты = "10|10" + Символы.ПС 
                                               + СтрЗаменить(строка(10 +ШиринаМеста),Символы.НПП,"") + "|10" + Символы.ПС
                                               + СтрЗаменить(строка(10 +ШиринаМеста),Символы.НПП,"") + "|" + СтрЗаменить(строка(10 +высотаМеста),Символы.НПП,"") + Символы.ПС
                                               + "10|" + СтрЗаменить(строка(10 +высотаМеста),Символы.НПП,"") + Символы.ПС
                                               + "10|10" + Символы.ПС; 
                текМесто = неразмеченныеПомещения[0].ЕдиницаОбъектаАренды;
                отбор = новый Структура("ЕдиницаОбъектаАренды",текМесто);
                массивСтрок = КоординатыИпомещения.найтиСтроки(отбор);
                если массивСтрок.количество() = 0 тогда
                               стр = КоординатыИпомещения.добавить();
                               стр.ЕдиницаОбъектаАренды = текМесто;
                               стр.КоординатыПомещения  = координаты;
                иначе
                               массивСтрок[0].ЕдиницаОбъектаАренды = текМесто;
                               массивСтрок[0].КоординатыПомещения = координаты;
                КонецЕсли;
                ВыбранноеПомещение = текМесто;
                место = ВыбранноеПомещение;
КонецПроцедуры

Процедура УдалитьВыбранноеМестоНажатие(Элемент)
                Если ДатаСведений = Дата(1,1,1) Тогда
                               Сообщить("Заполните дату");
                               Возврат;
                КонецЕсли;
                Если НЕ ЗначениеЗаполнено(Место) Тогда
                               Сообщить("Выберите место");
                               Возврат;
                КонецЕсли;
                Режим = РежимДиалогаВопрос.ДаНет;
                Ответ = Вопрос("Удалить выбранное место - "+Строка(Место)+"?", Режим, 0);
                Если Ответ = КодВозвратаДиалога.Нет Тогда
                    Возврат;
                КонецЕсли;
                
                НовДок = Документы.бит_ИнвентаризацияПомещений.СоздатьДокумент();
                НовДок.Дата = ДатаСведений;
                НовДок.Организация = Справочники.Организации.НайтиПоКоду("000000001");
    НовДок.Объект = ОбъектАренды;
                НовДок.ПолныйПутьКОбъекту = ПолучитьПолныйПутьКОбъекту();
                НовСтрока = НовДок.Помещения.Добавить();
                НовСтрока.Помещение = Место;
                НовСтрока.НаименованиеЕдиницы = Место.Наименование;
                Попытка
                               новДок.Записать(РежимЗаписиДокумента.Проведение);
                Исключение
                               Сообщить("Документ не проведен "+ОписаниеОшибки());
                КонецПопытки;
КонецПроцедуры

Функция ПолучитьПолныйПутьКОбъекту()
                
                Запрос = Новый Запрос;
                Запрос.Текст = "ВЫБРАТЬ
                                                                              |             бит_ОбъектыНедвижимости.Ссылка КАК Ссылка
                                                                              |ИЗ
                                                                              |             Справочник.бит_ОбъектыНедвижимости КАК бит_ОбъектыНедвижимости
                                                                              |ГДЕ
                                                                              |             бит_ОбъектыНедвижимости.Ссылка = &Ссылка
                                                                              |ИТОГИ ПО
                                                                              |             Ссылка ТОЛЬКО ИЕРАРХИЯ";
                Запрос.УстановитьПараметр("Ссылка",ОбъектАренды);
                Выборка = Запрос.Выполнить().Выбрать();
                мСтрочка = "\";
                Пока Выборка.Следующий() Цикл 
                               Если ОбъектАренды <> Выборка.Ссылка Тогда  
                                               Если Не Выборка.Ссылка = Справочники.бит_ОбъектыНедвижимости.ПустаяСсылка() Тогда  
                                                               мСтрочка = мСтрочка + Строка(Выборка.Ссылка) + "\"; 
                                               КонецЕсли;
                               КонецЕсли;
                КонецЦикла;
                Возврат мСтрочка;
                
КонецФункции



неразмеченныеПомещения = Неопределено;
КоординатыИпомещения = Неопределено;
планБТИ = Неопределено;
