перем соответствиеСтраницИобъектов;
перем ОтборПомещений;
перем СоответствиеЦветовПомещений;

//Интерактив 

Процедура СотрудникПриИзменении(Элемент)
                ЭлементыФормы.Подразделение.Значение               = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
                ЭлементыФормы.Контрагент.Значение                         = Справочники.Контрагенты.ПустаяСсылка();
                ЭлементыФормы.Проект.Значение                                  = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
    ЭлементыФормы.ОбъектАренды.Значение             = Справочники.бит_ОбъектыНедвижимости.ПустаяСсылка();
    ОчиститьПанель();
                запрос = новый запрос("ВЫБРАТЬ
                                      |       СотрудникиОрганизаций.Ссылка КАК сотрудник,
                                      |       Контрагенты.Ссылка КАК контрагент,
                                      |       ДоговорыКонтрагентов.Ссылка КАК договор,
                                      |       бит_ЗанятостьПомещенийОстатки.Помещение,
                                      |       бит_ЗанятостьПомещенийОстатки.Помещение.Владелец КАК ОбъектАренды,
                                      |       бит_ЗанятостьПомещенийОстатки.ПлощадьОстаток КАК ПлощадьОстаток,
                                      |       СотрудникиОрганизаций.ТекущееПодразделениеОрганизации КАК Подразделение,
                                      |       ДоговорыКонтрагентов.Наименование КАК Место,
                                      |       СотрудникиОрганизаций.Физлицо.Пол,
                                      |       СотрудникиОрганизаций.Наименование КАК СотрудникПолностью,
                                      |       бит_ЗанятостьПомещенийОстатки.ВидПлощади
                                      |ИЗ
                                      |       Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
                                      |                       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
                                      |                                      ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
                                      |                                                      ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_КлючиДоговоров КАК бит_КлючиДоговоров
                                      |                                                                      ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_ЗанятостьПомещений.Остатки(&Дата, ) КАК бит_ЗанятостьПомещенийОстатки
                                      |                                                                      ПО бит_КлючиДоговоров.Ссылка = бит_ЗанятостьПомещенийОстатки.Договор
                                      |                                                      ПО ДоговорыКонтрагентов.Ссылка = бит_КлючиДоговоров.Договор
                                      |                                      ПО Контрагенты.Ссылка = ДоговорыКонтрагентов.Владелец
                                      |                       ПО СотрудникиОрганизаций.Код = Контрагенты.Код
                                      |ГДЕ
                                      |       СотрудникиОрганизаций.Ссылка = &Ссылка
                                      |       И НЕ бит_КлючиДоговоров.ПометкаУдаления
                                      |       И НЕ ДоговорыКонтрагентов.ПометкаУдаления
                                      |ИТОГИ
                                      |       СУММА(ПлощадьОстаток)
                                      |ПО
                                      |       ОбъектАренды");
                запрос.УстановитьПараметр("Ссылка",Сотрудник);
                запрос.УстановитьПараметр("Дата",?(ДатаСведений = дата(1,1,1),ТекущаяДата(),ДатаСведений));
                результат = Запрос.Выполнить();
                ВыборкаОбъектАренды = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
                
                Пока ВыборкаОбъектАренды.Следующий() Цикл
                               если ВыборкаОбъектАренды.ОбъектАренды = NULL тогда
                                               Продолжить;
                               КонецЕсли;
                               
                               // Вставить обработку выборки ВыборкаОбъектАренды
                               ВыборкаДетальныеЗаписи = ВыборкаОбъектАренды.Выбрать();
                               ЦветаПомещений = новый Соответствие;
        СписокПомещений = новый СписокЗначений;
                               
                               Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
                                               стр = Состав.Добавить();
                                               ЗаполнитьЗначенияСвойств(стр,ВыборкаДетальныеЗаписи);
                                               ПодразделениеОрг = ВыборкаДетальныеЗаписи.Подразделение;
                                               представлениеПодразделения = ПодразделениеОрг.наименование;
                                               для к=1 по 5 цикл
                                                               если ПодразделениеОрг.родитель.пустая() тогда
                                                                              прервать;
                                                               иначе
                                                                              ПодразделениеОрг = ПодразделениеОрг.родитель;
                                                                              представлениеПодразделения = ПодразделениеОрг.наименование + " /" + представлениеПодразделения;
                                                               КонецЕсли;
                                               КонецЦикла;
                        стр.ПодразделениеПолностью = представлениеПодразделения;
                                               СписокПомещений.Добавить(ВыборкаДетальныеЗаписи.Помещение);
                                               
                                               если ВыборкаДетальныеЗаписи.ФизлицоПол = Перечисления.ПолФизическихЛиц.Женский тогда
                                                               ЦветаПомещений.Вставить(ВыборкаДетальныеЗаписи.Помещение,"Розовый");
                                               иначе
                                                               ЦветаПомещений.Вставить(ВыборкаДетальныеЗаписи.Помещение,"Синий");
                                               КонецЕсли;
                                               
                                               // Вставить обработку выборки ВыборкаДетальныеЗаписи
                               КонецЦикла;
                               Заголовок = СформироватьИмяСтраницы(ВыборкаОбъектАренды.ОбъектАренды);
                               ИмяСтраницы = СтрЗаменить(Заголовок," ","");
                               ИмяСтраницы = СтрЗаменить(ИмяСтраницы,"/","");
                               создатьСтраницуПанели(ИмяСтраницы,Заголовок);
                               вывестиПлан(ИмяСтраницы + "HTML",ВыборкаОбъектАренды.объектАренды,СписокПомещений,ЦветаПомещений);
                КонецЦикла;
                
КонецПроцедуры

Процедура ПодразделениеПриИзменении(Элемент)
                //ЭлементыФормы.Сотрудник.Значение       = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
                ЭлементыФормы.Контрагент.Значение                         = Справочники.Контрагенты.ПустаяСсылка();
                ЭлементыФормы.Проект.Значение                                  = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
    ЭлементыФормы.ОбъектАренды.Значение             = Справочники.бит_ОбъектыНедвижимости.ПустаяСсылка();

    ОчиститьПанель();
                запрос = новый запрос("ВЫБРАТЬ
                                      |       СотрудникиОрганизаций.Ссылка КАК сотрудник,
                                      |       Контрагенты.Ссылка КАК контрагент,
                                      |       ДоговорыКонтрагентов.Ссылка КАК договор,
                                      |       бит_ЗанятостьПомещенийОстатки.Помещение,
                                      |       бит_ЗанятостьПомещенийОстатки.Помещение.Владелец КАК ОбъектАренды,
                                      |       бит_ЗанятостьПомещенийОстатки.ПлощадьОстаток КАК ПлощадьОстаток,
                                      |       СотрудникиОрганизаций.ТекущееПодразделениеОрганизации КАК Подразделение,
                                      |       ДоговорыКонтрагентов.Наименование КАК Место,
                                      |       СотрудникиОрганизаций.Физлицо.Пол,
                                      |       СотрудникиОрганизаций.Наименование КАК СотрудникПолностью,
                                      |       бит_ЗанятостьПомещенийОстатки.ВидПлощади
                                      |ИЗ
                                      |       Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
                                      |                       ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
                                      |                                      ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
                                      |                                                      ЛЕВОЕ СОЕДИНЕНИЕ Справочник.бит_КлючиДоговоров КАК бит_КлючиДоговоров
                                      |                                                                      ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_ЗанятостьПомещений.Остатки(&Дата, ВидПлощади = &РабочиеМеста) КАК бит_ЗанятостьПомещенийОстатки
                                      |                                                                      ПО бит_КлючиДоговоров.Ссылка = бит_ЗанятостьПомещенийОстатки.Договор
                                      |                                                      ПО ДоговорыКонтрагентов.Ссылка = бит_КлючиДоговоров.Договор
                                      |                                      ПО Контрагенты.Ссылка = ДоговорыКонтрагентов.Владелец
                                      |                       ПО СотрудникиОрганизаций.Код = Контрагенты.Код
                                      |ГДЕ
                                      |       СотрудникиОрганизаций.ТекущееПодразделениеОрганизации В ИЕРАРХИИ(&Ссылка)
                                      |ИТОГИ
                                      |       СУММА(ПлощадьОстаток)
                                      |ПО
                                      |       ОбъектАренды");
                запрос.УстановитьПараметр("Ссылка",Подразделение);
                запрос.УстановитьПараметр("Дата",?(ДатаСведений = дата(1,1,1),ТекущаяДата(),ДатаСведений));
                запрос.УстановитьПараметр("РабочиеМеста",Справочники.бит_ВидыПлощадей.НайтиПоКоду("000000001"));
                результат = Запрос.Выполнить();
                ВыборкаОбъектАренды = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
                
                Пока ВыборкаОбъектАренды.Следующий() Цикл
                               если ВыборкаОбъектАренды.ОбъектАренды = NULL тогда
                                               Продолжить;
                               КонецЕсли;
                               
                               // Вставить обработку выборки ВыборкаОбъектАренды
                               ВыборкаДетальныеЗаписи = ВыборкаОбъектАренды.Выбрать();
                               ЦветаПомещений = новый Соответствие;
        СписокПомещений = новый СписокЗначений;
                               
                               Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
                                               стр = Состав.Добавить();
                                               ЗаполнитьЗначенияСвойств(стр,ВыборкаДетальныеЗаписи);
                                               ПодразделениеОрг = ВыборкаДетальныеЗаписи.Подразделение;
                                               представлениеПодразделения = ПодразделениеОрг.наименование;
                                               для к=1 по 5 цикл
                                                               если ПодразделениеОрг.родитель.пустая() тогда
                                                                              прервать;
                                                               иначе
                                                                              ПодразделениеОрг = ПодразделениеОрг.родитель;
                                                                              представлениеПодразделения = ПодразделениеОрг.наименование + " /" + представлениеПодразделения;
                                                               КонецЕсли;
                                               КонецЦикла;
                        стр.ПодразделениеПолностью = представлениеПодразделения;
                                               СписокПомещений.Добавить(ВыборкаДетальныеЗаписи.Помещение);
                                               если ВыборкаДетальныеЗаписи.ФизлицоПол = Перечисления.ПолФизическихЛиц.Женский тогда
                                                               ЦветаПомещений.Вставить(ВыборкаДетальныеЗаписи.Помещение,"Розовый");
                                               иначе
                                                               ЦветаПомещений.Вставить(ВыборкаДетальныеЗаписи.Помещение,"Синий");
                                               КонецЕсли;
                                               
                                               // Вставить обработку выборки ВыборкаДетальныеЗаписи
                               КонецЦикла;
                               Заголовок = СформироватьИмяСтраницы(ВыборкаОбъектАренды.ОбъектАренды);
                               ИмяСтраницы = СтрЗаменить(Заголовок," ","");
                               ИмяСтраницы = СтрЗаменить(ИмяСтраницы,"/","");
                               создатьСтраницуПанели(ИмяСтраницы,Заголовок);
                               вывестиПлан(ИмяСтраницы + "HTML",ВыборкаОбъектАренды.объектАренды,СписокПомещений,ЦветаПомещений);
                КонецЦикла;
КонецПроцедуры

Процедура ОбъектАрендыПриИзменении(Элемент)
                ОбъектАрендыПриЛюбомИзменении(Истина);         
КонецПроцедуры

Процедура ОбъектАрендыПриЛюбомИзменении(ОчиститьПанель)
                ЭлементыФормы.Подразделение.Значение               = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
                ЭлементыФормы.Контрагент.Значение                         = Справочники.Контрагенты.ПустаяСсылка();
                ЭлементыФормы.Проект.Значение                                  = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
//    ЭлементыФормы.Сотрудник.Значение   = Справочники.бит_ОбъектыНедвижимости.ПустаяСсылка();

                Если ОчиститьПанель Тогда
                ОчиститьПанель();
                КонецЕсли;
                
                запрос = новый запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
                                      |       бит_ЗанятостьПомещенийОстатки.Договор,
                                      |       бит_ЗанятостьПомещенийОстатки.Организация,
                                      |       бит_ЗанятостьПомещенийОстатки.Договор.Владелец КАК Контрагент,
                                      |       бит_ЗанятостьПомещенийОстатки.ПлощадьОстаток КАК ПлощадьОстаток,
                                      |       бит_ПараметрыДоговоровАренды.Период КАК ДатаНачала,
                                      |       бит_ПараметрыДоговоровАренды.ДатаОкончания КАК ДатаОкончания,
                                      |       бит_ЗанятостьПомещенийОстатки.Помещение,
                                      |       бит_Помещения.Ссылка,
                                      |       СотрудникиОрганизаций.Физлицо.Пол,
                                      |       &Помещение КАК объектАренды,
                                      |       СотрудникиОрганизаций.ТекущееПодразделениеОрганизации КАК Подразделение,
                                      |       СотрудникиОрганизаций.Ссылка КАК Сотрудник,
                                      |       бит_ПараметрыДоговоровАренды.ДоговорКонтрагента.Наименование КАК Место,
                                      |       бит_ЗанятостьПомещенийОстатки.Договор.Владелец.Наименование КАК СотрудникПолностью,
                                      |       бит_ЗанятостьПомещенийОстатки.ВидПлощади
                                      |ИЗ
                                      |       Справочник.бит_Помещения КАК бит_Помещения
                                      |                       ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_ПараметрыЕдиницОбъектаАренды.СрезПоследних(&Период, ) КАК бит_ПараметрыЕдиницОбъектаАрендыСрезПоследних
                                      |                       ПО бит_Помещения.Ссылка = бит_ПараметрыЕдиницОбъектаАрендыСрезПоследних.ЕдиницаОбъектаАренды
                                      |                       ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_ЗанятостьПомещений.Остатки(&Период, Помещение.Владелец В ИЕРАРХИИ (&Помещение)) КАК бит_ЗанятостьПомещенийОстатки
                                      |                                      ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ПараметрыДоговоровАренды.СрезПоследних(&Период, ) КАК бит_ПараметрыДоговоровАренды
                                      |                                      ПО бит_ЗанятостьПомещенийОстатки.Договор = бит_ПараметрыДоговоровАренды.ДоговорКонтрагента
                                      |                                      ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
                                      |                                      ПО бит_ЗанятостьПомещенийОстатки.Договор.Владелец.Код = СотрудникиОрганизаций.Код
                                      |                       ПО бит_Помещения.Ссылка = бит_ЗанятостьПомещенийОстатки.Помещение
                                      |ГДЕ
                                      |       НЕ бит_Помещения.ПометкаУдаления
                                      |       И бит_Помещения.Владелец В ИЕРАРХИИ(&Помещение)
                                      |       И бит_ПараметрыЕдиницОбъектаАрендыСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_СостояниеОбъекта.Используется)
                                      |ИТОГИ
                                      |       СУММА(ПлощадьОстаток)
                                      |ПО
                                      |       объектАренды");
                запрос.УстановитьПараметр("Помещение",ОбъектНедвижимости);
                запрос.УстановитьПараметр("Период",?(ДатаСведений = дата(1,1,1),КонецДня(ТекущаяДата()),КонецДня(ДатаСведений)));
                результат = Запрос.Выполнить();
                ВыборкаОбъектАренды = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
                Пока ВыборкаОбъектАренды.Следующий() Цикл
                               если ВыборкаОбъектАренды.ОбъектАренды = NULL тогда
                                               Продолжить;
                               КонецЕсли;
                               
                               // Вставить обработку выборки ВыборкаОбъектАренды
                               ВыборкаДетальныеЗаписи = ВыборкаОбъектАренды.Выбрать();
                               ЦветаПомещений = новый Соответствие;
        СписокПомещений = новый СписокЗначений;
                               
                               Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
                                               если ВыборкаДетальныеЗаписи.Место = NULL тогда
                                                               Продолжить;
                                               КонецЕсли;
                                               
                                               стр = Состав.Добавить();
                                               ЗаполнитьЗначенияСвойств(стр,ВыборкаДетальныеЗаписи);
                                               если ВыборкаДетальныеЗаписи.контрагент.родитель = Справочники.Контрагенты.НайтиПоКоду("^00000007") тогда
                                                               ЗапросВакансия = Новый Запрос;
                                                               ЗапросВакансия.Текст = "ВЫБРАТЬ
                                                                              |                СБТ_ВакансииПодразделенийСрезПоследних.ПодразделениеОрганизации
                                                                              |ИЗ
                                                                              |                РегистрСведений.СБТ_ВакансииПодразделений.СрезПоследних(&Период, ) КАК СБТ_ВакансииПодразделенийСрезПоследних
                                                                              |ГДЕ
                                                                              |              СБТ_ВакансииПодразделенийСрезПоследних.Вакансия = &Вакансия";
                                                               ЗапросВакансия.УстановитьПараметр("Период",?(ДатаСведений = дата(1,1,1),КонецДня(ТекущаяДата()),КонецДня(ДатаСведений)));
                                                               ЗапросВакансия.УстановитьПараметр("Вакансия",ВыборкаДетальныеЗаписи.контрагент);
                                                               РезультатВакансия = ЗапросВакансия.Выполнить().Выбрать();
                                                               Если РезультатВакансия.Следующий() Тогда
                                                                              ПодразделениеОрг = РезультатВакансия.ПодразделениеОрганизации;
                                                                              представлениеПодразделения = ПодразделениеОрг.наименование;
                                                                              для к=1 по 5 цикл
                                                                                              если ПодразделениеОрг.родитель.пустая() тогда
                                                                                                              прервать;
                                                                                              иначе
                                                                                                              ПодразделениеОрг = ПодразделениеОрг.родитель;
                                                                                                              представлениеПодразделения = ПодразделениеОрг.наименование + " /" + представлениеПодразделения;
                                                                                              КонецЕсли;
                                                                              КонецЦикла;
                                                               Иначе
                                                                              представлениеПодразделения = ВыборкаДетальныеЗаписи.контрагент.родитель.наименование;
                                                               КонецЕсли;
                                               ИначеЕсли ВыборкаДетальныеЗаписи.Подразделение = NULL тогда
                                                               если ВыборкаДетальныеЗаписи.контрагент <> NULL тогда
                                                                              представлениеПодразделения = ВыборкаДетальныеЗаписи.контрагент.родитель.наименование;
                                                               КонецЕсли;
                                               иначе
                                                               ПодразделениеОрг = ВыборкаДетальныеЗаписи.Подразделение;
                                                               представлениеПодразделения = ПодразделениеОрг.наименование;
                                                               для к=1 по 5 цикл
                                                                              если ПодразделениеОрг.родитель.пустая() тогда
                                                                                              прервать;
                                                                              иначе
                                                                                              ПодразделениеОрг = ПодразделениеОрг.родитель;
                                                                                              представлениеПодразделения = ПодразделениеОрг.наименование + " /" + представлениеПодразделения;
                                                                              КонецЕсли;
                                                               КонецЦикла;
                                               КонецЕсли;
                        стр.ПодразделениеПолностью = представлениеПодразделения;
                                               СписокПомещений.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
                                               
                                               если ВыборкаДетальныеЗаписи.ФизлицоПол = NULL тогда
                                                               если ВыборкаДетальныеЗаписи.контрагент = NULL тогда
                                                                              ЦветаПомещений.Вставить(ВыборкаДетальныеЗаписи.ссылка,"Зеленый");
                                                               иначе
                                                                              если Лев(ВыборкаДетальныеЗаписи.Контрагент.родитель.код,4) = "^АУТ" тогда
                                                                                              ЦветаПомещений.Вставить(ВыборкаДетальныеЗаписи.ссылка,"Желтый");
                                                                              ИначеЕсли ВыборкаДетальныеЗаписи.Контрагент.родитель.код = "^00000007" тогда
                                                                                              ЦветаПомещений.Вставить(ВыборкаДетальныеЗаписи.ссылка,"Фукси");
                                                                              иначе
                                                                                              ЦветаПомещений.Вставить(ВыборкаДетальныеЗаписи.ссылка,"Зеленый");
                                                                              КонецЕсли;
                                                               КонецЕсли;
                                               ИначеЕсли ВыборкаДетальныеЗаписи.ФизлицоПол = Перечисления.ПолФизическихЛиц.Женский тогда
                                                               ЦветаПомещений.Вставить(ВыборкаДетальныеЗаписи.ссылка,"Розовый");
                                               ИначеЕсли ВыборкаДетальныеЗаписи.ФизлицоПол = Перечисления.ПолФизическихЛиц.Мужской тогда 
                                                               ЦветаПомещений.Вставить(ВыборкаДетальныеЗаписи.ссылка,"Синий");
                                               КонецЕсли;
                                               
                                               // Вставить обработку выборки ВыборкаДетальныеЗаписи
                               КонецЦикла;
                               Заголовок = СформироватьИмяСтраницы(ВыборкаОбъектАренды.ОбъектАренды);
                               ИмяСтраницы = СтрЗаменить(Заголовок," ","");
                               ИмяСтраницы = СтрЗаменить(ИмяСтраницы,"/","");
                               создатьСтраницуПанели(ИмяСтраницы,Заголовок);
                               вывестиПлан(ИмяСтраницы + "HTML",ВыборкаОбъектАренды.объектАренды,СписокПомещений,ЦветаПомещений);
                КонецЦикла;
КонецПроцедуры

Процедура КонтрагентПриИзменении()
                ЭлементыФормы.Подразделение.Значение               = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
                //ЭлементыФормы.Контрагент.Значение                     = Справочники.Контрагенты.ПустаяСсылка();
                ЭлементыФормы.Проект.Значение                                  = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
//    ЭлементыФормы.Сотрудник.Значение   = Справочники.бит_ОбъектыНедвижимости.ПустаяСсылка();
    ЭлементыФормы.ОбъектАренды.Значение = Справочники.бит_ОбъектыНедвижимости.ПустаяСсылка();
    ОчиститьПанель();
                запрос = новый запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
                                      |       бит_ЗанятостьПомещенийОстатки.Договор,
                                      |       бит_ЗанятостьПомещенийОстатки.Организация,
                                      |       бит_ЗанятостьПомещенийОстатки.Договор.Владелец КАК Контрагент,
                                      |       бит_ЗанятостьПомещенийОстатки.ПлощадьОстаток КАК ПлощадьОстаток,
                                      |       бит_ПараметрыДоговоровАренды.Период КАК ДатаНачала,
                                      |       бит_ПараметрыДоговоровАренды.ДатаОкончания КАК ДатаОкончания,
                                      |       бит_ЗанятостьПомещенийОстатки.Помещение,
                                      |       бит_Помещения.Ссылка,
                                      |       СотрудникиОрганизаций.Физлицо.Пол,
                                      |       бит_ЗанятостьПомещенийОстатки.Помещение.Владелец КАК объектАренды,
                                      |       СотрудникиОрганизаций.ТекущееПодразделениеОрганизации КАК Подразделение,
                                      |       СотрудникиОрганизаций.Ссылка КАК Сотрудник,
                                      |       бит_ПараметрыДоговоровАренды.ДоговорКонтрагента.Наименование КАК Место,
                                      |       бит_ЗанятостьПомещенийОстатки.Договор.Владелец.Наименование КАК СотрудникПолностью,
                                      |       бит_ЗанятостьПомещенийОстатки.ВидПлощади
                                      |ИЗ
                                      |       Справочник.бит_Помещения КАК бит_Помещения
                                      |                       ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_ЗанятостьПомещений.Остатки(&Период, Помещение.Владелец В ИЕРАРХИИ (&Помещение)) КАК бит_ЗанятостьПомещенийОстатки
                                      |                                      ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ПараметрыДоговоровАренды.СрезПоследних(&Период, ) КАК бит_ПараметрыДоговоровАренды
                                      |                                      ПО бит_ЗанятостьПомещенийОстатки.Договор = бит_ПараметрыДоговоровАренды.ДоговорКонтрагента
                                      |                                      ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
                                      |                                      ПО бит_ЗанятостьПомещенийОстатки.Договор.Владелец.Код = СотрудникиОрганизаций.Код
                                      |                       ПО бит_Помещения.Ссылка = бит_ЗанятостьПомещенийОстатки.Помещение
                                      |ГДЕ
                                      |       НЕ бит_Помещения.ПометкаУдаления
                                      |       И бит_Помещения.Владелец В ИЕРАРХИИ(&Помещение)
                                      |       И бит_ЗанятостьПомещенийОстатки.Договор.Владелец В ИЕРАРХИИ(&АутсорсерГруппа)
                                      |ИТОГИ
                                      |       СУММА(ПлощадьОстаток)
                                      |ПО
                                      |       объектАренды");
                запрос.УстановитьПараметр("Помещение",ОбъектНедвижимости);
                запрос.УстановитьПараметр("АутсорсерГруппа",Контрагент);
                запрос.УстановитьПараметр("Период",?(ДатаСведений = дата(1,1,1),ТекущаяДата(),ДатаСведений));
                результат = Запрос.Выполнить();
                ВыборкаОбъектАренды = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
                
                Пока ВыборкаОбъектАренды.Следующий() Цикл
                               если ВыборкаОбъектАренды.ОбъектАренды = NULL тогда
                                               Продолжить;
                               КонецЕсли;
                               
                               // Вставить обработку выборки ВыборкаОбъектАренды
                               ВыборкаДетальныеЗаписи = ВыборкаОбъектАренды.Выбрать();
                               ЦветаПомещений = новый Соответствие;
        СписокПомещений = новый СписокЗначений;
                               
                               Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
                                               если ВыборкаДетальныеЗаписи.Место = NULL тогда
                                                               Продолжить;
                                               КонецЕсли;
                                               
                                               стр = Состав.Добавить();
                                               ЗаполнитьЗначенияСвойств(стр,ВыборкаДетальныеЗаписи);
                                               если ВыборкаДетальныеЗаписи.Подразделение = NULL тогда
                                                               если ВыборкаДетальныеЗаписи.контрагент <> NULL тогда
                                                                              представлениеПодразделения = ВыборкаДетальныеЗаписи.контрагент.родитель.наименование;
                                                               КонецЕсли;
                                               иначе
                                                               ПодразделениеОрг = ВыборкаДетальныеЗаписи.Подразделение;
                                                               представлениеПодразделения = ПодразделениеОрг.наименование;
                                                               для к=1 по 5 цикл
                                                                              если ПодразделениеОрг.родитель.пустая() тогда
                                                                                              прервать;
                                                                              иначе
                                                                                              ПодразделениеОрг = ПодразделениеОрг.родитель;
                                                                                              представлениеПодразделения = ПодразделениеОрг.наименование + " /" + представлениеПодразделения;
                                                                              КонецЕсли;
                                                               КонецЦикла;
                                               КонецЕсли;
                        стр.ПодразделениеПолностью = представлениеПодразделения;
                                               СписокПомещений.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
                                               если ВыборкаДетальныеЗаписи.ФизлицоПол = NULL тогда
                                                               если ВыборкаДетальныеЗаписи.контрагент = NULL тогда
                                                                              ЦветаПомещений.Вставить(ВыборкаДетальныеЗаписи.ссылка,"Зеленый");
                                                               иначе
                                                                              если Лев(ВыборкаДетальныеЗаписи.Контрагент.родитель.код,4) = "^АУТ" тогда
                                                                                              ЦветаПомещений.Вставить(ВыборкаДетальныеЗаписи.ссылка,"Желтый");
                                                                              иначе
                                                                                              ЦветаПомещений.Вставить(ВыборкаДетальныеЗаписи.ссылка,"Зеленый");
                                                                              КонецЕсли;
                                                               КонецЕсли;
                                               ИначеЕсли ВыборкаДетальныеЗаписи.ФизлицоПол = Перечисления.ПолФизическихЛиц.Женский тогда
                                                               ЦветаПомещений.Вставить(ВыборкаДетальныеЗаписи.ссылка,"Розовый");
                                               ИначеЕсли ВыборкаДетальныеЗаписи.ФизлицоПол = Перечисления.ПолФизическихЛиц.Мужской тогда 
                                                               ЦветаПомещений.Вставить(ВыборкаДетальныеЗаписи.ссылка,"Синий");
                                               КонецЕсли;
                                               
                                               // Вставить обработку выборки ВыборкаДетальныеЗаписи
                               КонецЦикла;
                               Заголовок = СформироватьИмяСтраницы(ВыборкаОбъектАренды.ОбъектАренды);
                               ИмяСтраницы = СтрЗаменить(Заголовок," ","");
                               ИмяСтраницы = СтрЗаменить(ИмяСтраницы,"/","");
                               создатьСтраницуПанели(ИмяСтраницы,Заголовок);
                               вывестиПлан(ИмяСтраницы + "HTML",ВыборкаОбъектАренды.объектАренды,СписокПомещений,ЦветаПомещений);
                КонецЦикла;
КонецПроцедуры


// контекстное меню

Процедура КонтекстноеМенюДляПолейПоказатьСвободныеМеста(Кнопка)
                текПоле = ЭлементыФормы.ПанельВывода.ТекущаяСтраница.имя + "HTML";
                текОбъет = соответствиеСтраницИобъектов.получить(текПоле);
                текПомещения = ОтборПомещений.получить(текПоле);//списокзначений
                текЦвета = СоответствиеЦветовПомещений.получить(текПоле);//соответствие
                // найдем свободные места
                запрос = новый запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
                                      |       бит_ЗанятостьПомещенийОстатки.Договор,
                                      |       бит_ЗанятостьПомещенийОстатки.Организация,
                                      |       бит_ЗанятостьПомещенийОстатки.Договор.Владелец КАК Контрагент,
                                      |       бит_ЗанятостьПомещенийОстатки.ПлощадьОстаток КАК ПлощадьОстаток,
                                      |       бит_ПараметрыДоговоровАренды.Период КАК ДатаНачала,
                                      |       бит_ПараметрыДоговоровАренды.ДатаОкончания КАК ДатаОкончания,
                                      |       бит_ЗанятостьПомещенийОстатки.Помещение,
                                      |       бит_Помещения.Ссылка
                                      |ИЗ
                                      |       Справочник.бит_Помещения КАК бит_Помещения
                                      |                       ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.бит_ПараметрыЕдиницОбъектаАренды.СрезПоследних(&Период, ) КАК бит_ПараметрыЕдиницОбъектаАрендыСрезПоследних
                                      |                       ПО бит_Помещения.Ссылка = бит_ПараметрыЕдиницОбъектаАрендыСрезПоследних.ЕдиницаОбъектаАренды
                                                                                                |                           ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.бит_ЗанятостьПомещений.Остатки(&Период, Помещение.Владелец В ИЕРАРХИИ (&Помещение)) КАК бит_ЗанятостьПомещенийОстатки
                                      |                                      ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_ПараметрыДоговоровАренды.СрезПоследних(&Период, ) КАК бит_ПараметрыДоговоровАренды
                                      |                                      ПО бит_ЗанятостьПомещенийОстатки.Договор = бит_ПараметрыДоговоровАренды.ДоговорКонтрагента
                                      |                       ПО бит_Помещения.Ссылка = бит_ЗанятостьПомещенийОстатки.Помещение
                                      |ГДЕ
                                                                                                | НЕ бит_Помещения.ПометкаУдаления                                                                                                                                                                                    
                                                                                                |           И бит_Помещения.Владелец В ИЕРАРХИИ(&Помещение)
                                      |       И бит_ПараметрыЕдиницОбъектаАрендыСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.бит_СостояниеОбъекта.Используется)                                                                                   
                                                                                                |           И бит_ЗанятостьПомещенийОстатки.Договор ЕСТЬ NULL ");
                запрос.УстановитьПараметр("Помещение",текОбъет);
                запрос.УстановитьПараметр("Период",?(ДатаСведений = дата(1,1,1),ТекущаяДата(),ДатаСведений));
                выборка = запрос.Выполнить().Выбрать();
                пока выборка.Следующий() цикл
                               текПомещения.добавить(выборка.ссылка);
                               текЦвета.вставить(выборка.ссылка,"Зеленый");
                КонецЦикла;
                вывестиПлан(текПоле,текОбъет,текПомещения,текЦвета);              
КонецПроцедуры

Процедура КонтекстноеМенюДляПолейОбновить(Кнопка)
                Если ЗначениеЗаполнено(ОбъектНедвижимости) Тогда
                               ОбъектАрендыПриЛюбомИзменении(Истина);
                КонецЕсли;
//            ОбновитьПолеHTML();
КонецПроцедуры





/// Общие процедуры формы

// Удаляет все страницы кроме основной
Процедура ОчиститьПанель()
                Состав.Очистить();
                массивСтраниц = новый Массив;
                для Каждого текСтраница из элементыФормы.ПанельВывода.Страницы цикл
                               если текСтраница.имя <> "ОсновнаяСтраница" тогда
                                               массивСтраниц.Добавить(текСтраница);
                               КонецЕсли;
                КонецЦикла;
                для Каждого текЭлемент из массивСтраниц цикл
                               элементыФормы.ПанельВывода.Страницы.Удалить(текЭлемент);
                КонецЦикла;
                соответствиеСтраницИобъектов.очистить();
                ОтборПомещений.очистить();
                СоответствиеЦветовПомещений.очистить();
КонецПроцедуры

Функция СформироватьИмяСтраницы(ОбъектНедвижимости)
                если ОбъектНедвижимости.Пустая() тогда
                               возврат Неопределено;
                КонецЕсли;
                Путь = "";
                если ОбъектНедвижимости.Родитель.Пустая() тогда
                               Путь = ОбъектНедвижимости.Наименование;
                               возврат путь;
                ИначеЕсли ОбъектНедвижимости.Родитель.родитель.Пустая() тогда
                               Путь = ОбъектНедвижимости.Родитель.Наименование + "/" + ОбъектНедвижимости.Наименование;
                               возврат путь;
                ИначеЕсли ОбъектНедвижимости.Родитель.Родитель.родитель.Пустая() тогда
                               Путь = ОбъектНедвижимости.Родитель.Родитель.Наименование + "/" + ОбъектНедвижимости.Родитель.Наименование + "/" + ОбъектНедвижимости.Наименование;   
                               возврат путь;
                ИначеЕсли ОбъектНедвижимости.родитель.Родитель.Родитель.родитель.Пустая() тогда
                               Путь = ОбъектНедвижимости.Родитель.Родитель.Родитель.Наименование + "/" +ОбъектНедвижимости.Родитель.Родитель.Наименование + "/" + ОбъектНедвижимости.Родитель.Наименование + "/" + ОбъектНедвижимости.Наименование; 
                               возврат путь;
                КонецЕсли;
                возврат путь;

КонецФункции // СформироватьНаименованиеДоговора()

Процедура создатьСтраницуПанели(Имя,заголовок)

                НовСтраница = элементыФормы.ПанельВывода.Страницы.Добавить(Имя,Заголовок);
                ЭлементыФормы.ПанельВывода.ТекущаяСтраница = НовСтраница;
                ПолеРегистра = ЭлементыФормы.Добавить(Тип("ПолеHTMLДокумента"), 
        Имя+"HTML", 
        Истина, 
        элементыФормы.ПанельВывода);
    ПолеРегистра.Верх = 30;
                ПолеРегистра.Лево = 6;
                ПолеРегистра.Ширина = ЭлементыФормы.ПанельВывода.Ширина - 14;
                ПолеРегистра.Высота = ЭлементыФормы.ПанельВывода.Высота - 56;
                //ПолеРегистра.ТолькоПросмотр = Ложь;
                //ПолеРегистра.ИзменятьПорядокСтрок = Истина;
                //ПолеРегистра.ИзменятьСоставСтрок = Истина;
                ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Верх,
                        элементыФормы.ПанельВывода,
                        ГраницаЭлементаУправления.Низ);
                ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Низ,
                        элементыФормы.ПанельВывода,
                        ГраницаЭлементаУправления.Низ);
                ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Право,
                        элементыФормы.ПанельВывода,
                        ГраницаЭлементаУправления.Право);
                ПолеРегистра.АвтоКонтекстноеМеню = ложь;
                ПолеРегистра.КонтекстноеМеню = ЭлементыФормы.КонтекстноеМенюДляПолей;
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
                соответствиеСтраницИобъектов = новый Соответствие;
                ОтборПомещений = новый Соответствие;
                СоответствиеЦветовПомещений = новый Соответствие;
КонецПроцедуры

Процедура ОбновитьПолеHTML()
                текПоле = ЭлементыФормы.ПанельВывода.ТекущаяСтраница.имя + "HTML";
                текОбъет = соответствиеСтраницИобъектов.получить(текПоле);
                текПомещения = ОтборПомещений.получить(текПоле);//списокзначений
                текЦвета = СоответствиеЦветовПомещений.получить(текПоле);//соответствие

                вывестиПлан(текПоле,текОбъет,текПомещения,текЦвета);              
КонецПроцедуры



/// Процедуры работы с помещениями
Функция ПолучитьДанныеРегистраСхемыОбъектов(ОбъектАренды,ВернутьСсылку = Ложь)
                
                Если ВернутьСсылку Тогда
                               ВозвратЗначение = Неопределено;
                Иначе
                               ВозвратЗначение = Ложь;                        
                КонецЕсли;
                
                //ВыбраннаяСтрока = ЭлементыФормы.СправочникДерево.ТекущаяСтрока;
                
                Запрос = Новый Запрос;
                Запрос.Текст =
                "ВЫБРАТЬ
                |             бит_СхемыОбъектовСрезПоследних.Период,
                |             бит_СхемыОбъектовСрезПоследних.ОбъектАренды
                |ИЗ
                |             РегистрСведений.бит_СхемыОбъектов.СрезПоследних(&Период, ОбъектАренды = &ОбъектАренды) КАК бит_СхемыОбъектовСрезПоследних";
                
                Запрос.УстановитьПараметр("Период", ДатаСведений);
                //Запрос.УстановитьПараметр("Период", ТекущаяДата());
                //Запрос.УстановитьПараметр("ОбъектАренды", ВыбраннаяСтрока.ОбъектОтбор);
                Запрос.УстановитьПараметр("ОбъектАренды", ОбъектАренды);
                ДанныеРегистра = Запрос.Выполнить().Выбрать();
                
                МенеджерЗаписи = РегистрыСведений.бит_СхемыОбъектов.СоздатьМенеджерЗаписи();
                МенеджерЗаписи.ОбъектАренды = ОбъектАренды;
                
                Если ДанныеРегистра.Следующий() Тогда
                               МенеджерЗаписи.Период = ДанныеРегистра.Период;
                               МенеджерЗаписи.Прочитать();
                Иначе
                               МенеджерЗаписи.Период = ДатаСведений;
                               //МенеджерЗаписи.Период = ТекущаяДата();
                КонецЕсли;       
                
                Если ВернутьСсылку Тогда
                               ВозвратЗначение = МенеджерЗаписи;
                Иначе
                               ВозвратЗначение = МенеджерЗаписи.Выбран() И ТипЗнч(МенеджерЗаписи.СхемаОбъекта.Получить()) <> ТипЗнч(Неопределено);                              
                КонецЕсли;       
                
                Возврат ВозвратЗначение;
                
КонецФункции

Процедура вывестиПлан(ИмяHTML,объектАренды,Помещения,ЦветаПомещений);
                КоординатыИпомещения = новый ТаблицаЗначений;
                КоординатыИпомещения.Колонки.Добавить("ЕдиницаОбъектаАренды");
                КоординатыИпомещения.Колонки.Добавить("КоординатыПомещения");
                СсылкаНаЗаписьРегистра = ПолучитьДанныеРегистраСхемыОбъектов(объектАренды,Истина);
                Если СсылкаНаЗаписьРегистра=Неопределено Тогда 
                               СхемаОбъекта = "<HTML></HTML>";
                               планБТИ = Неопределено;
                Иначе                                  
                               КартинкаСхемаОбъекта = СсылкаНаЗаписьРегистра.СхемаОбъекта.Получить();
                               Если КартинкаСхемаОбъекта = Неопределено Тогда 
                                               Сообщить("Нет картинки для - "+ИмяHTML);
                                               Возврат;
                               КонецЕсли;
                               ФорматСхемы = КартинкаСхемаОбъекта.Формат();
                               Если ФорматСхемы = ФорматКартинки.EMF
                                               ИЛИ ФорматСхемы = ФорматКартинки.Icon
                                               ИЛИ ФорматСхемы = ФорматКартинки.TIFF
                                               ИЛИ ФорматСхемы = ФорматКартинки.WMF
                                               ИЛИ ФорматСхемы = ФорматКартинки.НеизвестныйФормат Тогда
                                               КартинкаСхемаОбъекта = КартинкаСхемаОбъекта.Преобразовать(ФорматКартинки.PNG);
                               КонецЕсли;       
                               ВремФайл = ПолучитьИмяВременногоФайла(Строка(КартинкаСхемаОбъекта.Формат()));
                               КартинкаСхемаОбъекта.Записать(ВремФайл);
                               ПланБТИ = ВремФайл;
                КонецЕсли;
                запрос = новый запрос("ВЫБРАТЬ
                                      |       бит_Помещения.Ссылка КАК ЕдиницаОбъектаАренды,
                                      |       бит_КординатыПомещенийСрезПоследних.ЕдиницаОбъектаАренды КАК ссылка,
                                      |       бит_КординатыПомещенийСрезПоследних.КоординатыПомещения
                                      |ИЗ
                                      |       Справочник.бит_Помещения КАК бит_Помещения
                                      |                       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.бит_КординатыПомещений.СрезПоследних(&Дата, ЕдиницаОбъектаАренды.Владелец = &объектАренды) КАК бит_КординатыПомещенийСрезПоследних
                                      |                       ПО (бит_КординатыПомещенийСрезПоследних.ЕдиницаОбъектаАренды = бит_Помещения.Ссылка)
                                      |ГДЕ
                                                                                                | НЕ бит_Помещения.ПометкаУдаления                                                                                                                                                                                                                                                                                  
                                                                                                |           И бит_Помещения.Владелец = &объектАренды
                                                                                                |           И бит_КординатыПомещенийСрезПоследних.ЕдиницаОбъектаАренды В(&СписокПомещений)");
                запрос.УстановитьПараметр("объектАренды",ОбъектАренды);
                запрос.УстановитьПараметр("Дата",?(ДатаСведений = дата(1,1,1),ТекущаяДата(),ДатаСведений));
                запрос.УстановитьПараметр("СписокПомещений",Помещения);
                резЗапроса = запрос.Выполнить().Выгрузить();
                Если планБТИ=Неопределено Тогда 
                               СхемаОбъекта = "<HTML></HTML>";                                                                
                Иначе                                  
                               СхемаОбъекта = "<HTML xmlns:v = ""urn:schemas-microsoft-com:vml"" xmlns:t = ""urn:schemas-microsoft-com:time""><HEAD>
                                                                              |<META content=""text/html; charset=utf-8"" http-equiv=Content-Type></META>
                                                                              |<STYLE>
                                                                              |v\:* {
                                                                              |             BEHAVIOR: url(#default#VML)
                                                                              |}
                                                                              |</STYLE>
                                                                              |
                                                                              |<META name=GENERATOR content=""MSHTML 8.00.6001.18702""></META></BASE></HEAD>
                                                                              |<BODY>
                                                                              |<P>";
                               СхемаОбъекта = СхемаОбъекта + "<img src=""file://"+планБТИ+""" style='position:absolute; left:10; top:10' /> ";
                               
                               Если  РезЗапроса.Количество() > 0 Тогда
                                               // 1CBiT_ABoltovich 08.06.2011 Начало{                                             
                                               КартинкаШтрихЗеленый          = БиблиотекаКартинок.бит_штр_Зеленый;
                                               ВремФайлШтрихЗеленый       = ПолучитьИмяВременногоФайла(Строка(КартинкаШтрихЗеленый.Формат()));
                                               КартинкаШтрихЗеленый.Записать(ВремФайлШтрихЗеленый);
                                               
                                               КартинкаШтрихСиний                               = БиблиотекаКартинок.бит_штр_Синий;
                                               ВремФайлШтрихСиний                             = ПолучитьИмяВременногоФайла(Строка(КартинкаШтрихСиний.Формат()));
                                               КартинкаШтрихСиний.Записать(ВремФайлШтрихСиний); 
                                               
                                               КартинкаШтрихРозовый           = БиблиотекаКартинок.бит_штр_розовый;
                                               ВремФайлШтрихРозовый        = ПолучитьИмяВременногоФайла(Строка(КартинкаШтрихРозовый.Формат()));
                                               КартинкаШтрихРозовый.Записать(ВремФайлШтрихРозовый); 

                                               КартинкаШтрихЖелтый            = БиблиотекаКартинок.бит_штр_желтый;
                                               ВремФайлШтрихЖелтый         = ПолучитьИмяВременногоФайла(Строка(КартинкаШтрихЖелтый.Формат()));
                                               КартинкаШтрихЖелтый.Записать(ВремФайлШтрихЖелтый); 
                                               
                                               КартинкаШтрихФукси = БиблиотекаКартинок.бит_штр_Фукси;
                                               ВремФайлШтрихФукси              = ПолучитьИмяВременногоФайла(Строка(КартинкаШтрихФукси.Формат()));
                                               КартинкаШтрихФукси.Записать(ВремФайлШтрихФукси); 

                                               КартинкаШтрихКрасный           = БиблиотекаКартинок.бит_штр_красный;
                                               ВремФайлШтрихКрасный        = ПолучитьИмяВременногоФайла(Строка(КартинкаШтрихКрасный.Формат()));
                                               КартинкаШтрихКрасный.Записать(ВремФайлШтрихКрасный); 

                                               
                                               
                                               // 1CBiT_ABoltovich 08.06.2011 }Конец                                               
                                               Для Каждого Стр из РезЗапроса цикл
                                                               Коорд = СтрЗаменить(Стр.КоординатыПомещения, "|", " ");
                                                               // 1CBiT_ABoltovich 08.06.2011 Начало{                                             
                                                               //СхемаОбъекта = СхемаОбъекта + "<v:polyline id="+стр.ЕдиницаОбъектаАренды.УникальныйИдентификатор()+" style='position:absolute; left:10; top:10' fillcolor=""blue"" strokecolor=""black"" strokeweight=""1px"" points="""+Коорд+" "" /> ";
                                                               //НайденнаяСтрока     = ИнформацияПоДоговорам.Найти(стр.ЕдиницаОбъектаАренды, "Помещение");                                                             
                                                               //ВремФайлШтрих = ?(НайденнаяСтрока = Неопределено, ВремФайлШтрихСиний, ВремФайлШтрихЗеленый);
                                                               если ЦветаПомещений.получить(стр.ссылка) = "Розовый" тогда
                                                                              ВремФайлШтрих = ВремФайлШтрихРозовый;
                                                               ИначеЕсли ЦветаПомещений.получить(стр.ссылка) = "Синий" тогда
                                                                              ВремФайлШтрих = ВремФайлШтрихСиний;
                                                               ИначеЕсли ЦветаПомещений.получить(стр.ссылка) = "Зеленый" тогда
                                                                              ВремФайлШтрих = ВремФайлШтрихЗеленый;
                                                               ИначеЕсли ЦветаПомещений.получить(стр.ссылка) = "Желтый" тогда
                                                                              ВремФайлШтрих = ВремФайлШтрихЖелтый;
                                                               ИначеЕсли ЦветаПомещений.получить(стр.ссылка) = "Фукси" тогда
                                                                              ВремФайлШтрих = ВремФайлШтрихФукси;
                                                               ИначеЕсли ЦветаПомещений.получить(стр.ссылка) = "Красный" тогда
                                                                              ВремФайлШтрих = ВремФайлШтрихКрасный;
                                                               иначе
                                                                              ВремФайлШтрих = ВремФайлШтрихСиний;
                                                               КонецЕсли;       
                                                               СхемаОбъекта = СхемаОбъекта + "<v:polyline id="+стр.ссылка.УникальныйИдентификатор()+" style='position:absolute; left:10; top:10' strokecolor=""black"" strokeweight=""1px"" points="""+Коорд+" ""><v:fill src=""file://" + ВремФайлШтрих + """ type=""tile""/></v:polyline>";                                                                              
                                                               // 1CBiT_ABoltovich 08.06.2011 }Конец                                               
                                               конецЦикла;                                   
                               КонецЕсли;
                               СхемаОбъекта = СхемаОбъекта + "</P></BODY></HTML>";
                               элементыФормы[ИмяHTML].УстановитьТекст(СхемаОбъекта);
                               ДобавитьОбработчик элементыФормы[ИмяHTML].Документ.ondragstart, КартаЭтажаondragstart;
                               ДобавитьОбработчик элементыФормы[ИмяHTML].Документ.onselectstart, КартаЭтажаonselectstart;
                               ДобавитьОбработчик элементыФормы[ИмяHTML].Документ.onclick, ПолеHTMLДокументаonclick;
                конецЕсли;                                                                                                    
    соответствиеСтраницИобъектов.вставить(ИмяHTML,объектАренды);
                ОтборПомещений.вставить(ИмяHTML,Помещения);
                СоответствиеЦветовПомещений.вставить(ИмяHTML,ЦветаПомещений);
                
КонецПроцедуры

Процедура ПолеHTMLДокументаonclick(pEvtObj)
                Попытка
                               ИД = pEvtObj.srcElement.id;
                               ВыбранноеПомещение = Справочники.бит_Помещения.ПолучитьСсылку(Новый УникальныйИдентификатор(ИД));
                               отбор = новый Структура("Помещение",ВыбранноеПомещение);
                               массивСтрок = Состав.НайтиСтроки(отбор);
                               
                               если массивСтрок.Количество()>0 тогда
                                               карточка = ПолучитьФорму("Карточка");
                                               карточка.ОбъектАренды = ОбъектНедвижимости;
                                               карточка.сотрудник = массивСтрок[0].СотрудникПолностью;
                                               карточка.Подразделение = массивСтрок[0].ПодразделениеПолностью;
                        Карточка.Помещение = ВыбранноеПомещение;
                                               карточка.Место = массивСтрок[0].Место;
                                               карточка.Площадь = массивСтрок[0].ПлощадьОстаток;
                                               карточка.ДатаСведений = ДатаСведений;
                                               карточка.массивСтрок = массивСтрок;
                                               карточка.открытьМодально();
                                               Если карточка.Перемещать Тогда
                                                               формаПеремещения = ПолучитьФорму("Перемещение");
                                                               формаПеремещения.ОбъектАренды = ОбъектНедвижимости;
                                                               формаПеремещения.Помещение = ВыбранноеПомещение;
                                                               формаПеремещения.ОткрытьМодально();
                                               КонецЕсли;
                               иначе
                                               //Занять свободное место
                                               Если РольДоступна("СБТ_Пользователь") Тогда
                                                               Возврат;
                                               КонецЕсли;
                                               формаПеремещения = ПолучитьФорму("Перемещение");
                                               формаПеремещения.ОбъектАренды = ОбъектНедвижимости;
                                               формаПеремещения.Помещение = ВыбранноеПомещение;
                                               формаПеремещения.ОткрытьМодально();
                               КонецЕсли;
                               
                Исключение
                               возврат;
                КонецПопытки;
КонецПроцедуры

// отключение типового функционала поля HTML документа
Процедура КартаЭтажаondragstart(pEvtObj)
                pEvtObj.returnValue =ложь;//стандартнаяОбработка = ложь
КонецПроцедуры

Процедура КартаЭтажаonselectstart(pEvtObj)
                pEvtObj.returnValue =ложь; //стандартнаяОбработка = ложь
КонецПроцедуры


//тестовый процедуры
Процедура КнопкаВыполнитьНажатие(Кнопка)
                // Вставить содержимое обработчика.
                создатьСтраницуПанели("Имя","заголовок");
КонецПроцедуры

Процедура ОсновныеДействияФормыУдалить(Кнопка)
                текСтраница = элементыФормы.ПанельВывода.ТекущаяСтраница;
                если текСтраница.имя <> "ОсновнаяСтраница" тогда
                               элементыФормы.ПанельВывода.Страницы.Удалить(текСтраница);
                КонецЕсли;
                
КонецПроцедуры

Процедура КонтекстноеМенюДляПолейТест(Кнопка)
                Сообщить("Тест");
КонецПроцедуры
Процедура КонтрагентНачалоВыбора(Элемент, СтандартнаяОбработка)
                СтандартнаяОбработка=ложь;
                форма = Справочники.Контрагенты.ПолучитьФормуВыбора("ФормаВыбораГруппы");
                //сюда отбор по аутсорсерам
                Элемент.значение = форма.ОткрытьМодально();
                КонтрагентПриИзменении();
КонецПроцедуры

Процедура КонтекстноеМенюДляПолейПоказатьВсеМеста(Кнопка)
                текПоле = ЭлементыФормы.ПанельВывода.ТекущаяСтраница.имя + "HTML";
                ОбъектНедвижимости = соответствиеСтраницИобъектов.получить(текПоле);
                элементыФормы.ПанельВывода.Страницы.Удалить(ЭлементыФормы.ПанельВывода.ТекущаяСтраница);
                ОбъектАрендыПриЛюбомИзменении(Ложь);
КонецПроцедуры
